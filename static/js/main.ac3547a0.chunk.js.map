{"version":3,"sources":["images/bg-dark.jpg","components/Main/Hero.tsx","components/Main/Main.tsx","images/fer-profile.jpeg","components/Sidebar/Navbar.tsx","components/Sidebar/Footer.tsx","components/Sidebar/Sidebar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Hero","hero","className","style","backgroundImage","bgPic","fullName","title","Main","Navbar","navItems","map","item","index","Footer","link","Sidebar","src","profilePic","alt","width","stack","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oJAAe,G,UAAA,IAA0B,qC,OCc1BA,MATf,YAA0C,IAA3BC,EAA0B,EAA1BA,KACX,OAAQ,sBAAKC,UAAU,+BACvBC,MAAO,CAACC,gBAAgB,OAAD,OAASC,EAAT,MADf,UAGJ,6BAAKJ,EAAKK,WACV,+BAAKL,EAAKM,MAAV,YCEOC,MAPf,YAA0C,IAA3BP,EAA0B,EAA1BA,KACX,OAAQ,sBAAKC,UAAU,gBAAf,UACJ,cAAC,EAAD,CAAMD,KAAMA,IACZ,6BAAKA,EAAKK,eCRH,MAA0B,yCCqB1BG,MAZf,YAEkB,IADdC,EACa,EADbA,SAEA,OAAQ,6BACHA,EAASC,KAAI,SAACC,EAAMC,GACjB,OAAO,6BACFD,EAAKL,OADMM,SCJbC,MANf,YAA2C,IAA1Bb,EAAyB,EAAzBA,KACb,OAAQ,yBAAQC,UAAU,4BAAlB,kBACID,EAAKK,aCCjBI,EAAW,CAAC,CACZH,MAAO,SACPQ,KAAM,IACR,CACER,MAAO,cACPQ,KAAM,IACR,CACER,MAAO,cACPQ,KAAM,IACR,CACER,MAAO,gBACPQ,KAAM,IACR,CACER,MAAO,WACPQ,KAAM,KAqBKC,MAjBf,YAA4C,IAA1Bf,EAAyB,EAAzBA,KACd,OAAQ,sBAAKC,UAAU,uCAAf,UACJ,qBACIe,IAAKC,EACLC,IAAI,cACJjB,UAAU,eACVkB,MAAM,UAEV,6BAAKnB,EAAKK,WACV,mBAAGJ,UAAU,oBACb,mBAAGA,UAAU,yBAEb,cAAC,EAAD,CAAQQ,SAAUA,IAClB,cAAC,EAAD,CAAQT,KAAMA,QChClBA,EAAO,CACTK,SAAS,kBACTC,MAAO,uBACPc,MAAO,CAAC,QAAS,OAAQ,QAAS,MAAO,SAAU,OAAQ,QAiB9CC,MAdf,WAGE,OACE,sBAAKpB,UAAU,iCAAf,UACE,cAAC,EAAD,CAASD,KAAMA,IACf,cAAC,EAAD,CAAMA,KAAMA,QCJHsB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ac3547a0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg-dark.c2753314.jpg\";","import * as React from 'react';\nimport bgPic from '../../images/bg-dark.jpg'\n\ntype heroType = {fullName: string, title: string, stack: string[]}\n\nfunction Hero({hero}: { hero: heroType}) {\n    return (<div className=\"opacity-75 h-screen bg-cover\"\n    style={{backgroundImage: `url(${bgPic})`}}>\n\n        <h1>{hero.fullName}</h1>\n        <h2>{hero.title}: </h2>\n    </div>)\n}\n\nexport default Hero;\n","import * as React from 'react';\nimport Hero from './Hero';\n\ntype heroType = {fullName: string, title: string, stack: string[]}\n\nfunction Main({hero}: { hero: heroType}) {\n    return (<div className=\"w-4/5 ml-auto\">\n        <Hero hero={hero}/>\n        <h1>{hero.fullName}</h1>\n    </div>)\n}\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/fer-profile.69201a71.jpeg\";","import * as React from 'react';\n\ntype navItemsType = {\n    navItems: {\n        title: string, \n        link: string\n    }[]\n}\n\nfunction Navbar({\n    navItems\n}: navItemsType) {\n    return (<ul>\n        {navItems.map((item, index) => {\n            return <li key={index}>\n                {item.title}\n            </li>\n        })}        \n    </ul>)\n}\n\nexport default Navbar;\n","import * as React from 'react';\n\ntype heroType = {fullName: string, title: string, stack: string[]}\n\nfunction Footer({hero}: {hero: heroType}) {\n    return (<footer className=\"fixed bottom-0 left-0 p-4\">\n        &copy; {hero.fullName}\n    </footer>)\n}\n\nexport default Footer;","import * as React from 'react';\nimport profilePic from '../../images/fer-profile.jpeg'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\ntype heroType = {fullName: string, title: string, stack: string[]}\n\nlet navItems = [{\n    title: \"Inicio\",\n    link: \"\"\n},{\n    title: \"Sobre mí\",\n    link: \"\"    \n},{\n    title: \"Habilidades\",\n    link: \"\"    \n},{\n    title: \"Currículum\",\n    link: \"\"    \n},{\n    title: \"Contacto\",\n    link: \"\"    \n}]\n\n\nfunction Sidebar({hero}: {hero: heroType}) {\n    return (<div className=\"h-screen w-1/5 bg-gray-700 fixed p-5\">\n        <img \n            src={profilePic} \n            alt=\"Fer profile\"\n            className=\"rounded-full\"\n            width=\"120px\"\n        />\n        <h1>{hero.fullName}</h1>\n        <i className=\"fab fa-linkedin\"></i>\n        <i className=\"fab fa-github-square\"></i>\n\n        <Navbar navItems={navItems} />\n        <Footer hero={hero}/>\n    </div>)\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport './App.css';\nimport Main from './components/Main/Main';\nimport Sidebar from './components/Sidebar/Sidebar'\n// import {useDarkMode} from './components/useDarkMode'\n\nlet hero = {\n  fullName:\"Fernando Farias\",\n  title: \"Full Stack Developer\",\n  stack: [\"React\", \"Node\", \"MySQL\", \"Git\", \"GitHub\", \"HTML\", \"CSS\"]\n}\n\nfunction App() {\n  // const [theme, toggleTheme] = useDarkMode();\n\n  return (\n    <div className=\"bg-white dark:bg-gray-900 flex\">\n      <Sidebar hero={hero}/>\n      <Main hero={hero}/>\n      {/* <button onClick={() => toggleTheme}>Toggle Dark Mode</button> */}\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}